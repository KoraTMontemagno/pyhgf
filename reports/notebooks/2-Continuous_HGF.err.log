Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
with two_level_hgf:
    two_level_hgf_idata = pm.sample(chains=4)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mIndexError[0m                                Traceback (most recent call last)
File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/aesara/compile/function/types.py:971[0m, in [0;36mFunction.__call__[0;34m(self, *args, **kwargs)[0m
[1;32m    969[0m [38;5;28;01mtry[39;00m:
[1;32m    970[0m     outputs [38;5;241m=[39m (
[0;32m--> 971[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mvm[49m[43m([49m[43m)[49m
[1;32m    972[0m         [38;5;28;01mif[39;00m output_subset [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m
[1;32m    973[0m         [38;5;28;01melse[39;00m [38;5;28mself[39m[38;5;241m.[39mvm(output_subset[38;5;241m=[39moutput_subset)
[1;32m    974[0m     )
[1;32m    975[0m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m:

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/aesara/graph/op.py:543[0m, in [0;36mOp.make_py_thunk.<locals>.rval[0;34m(p, i, o, n, params)[0m
[1;32m    539[0m [38;5;129m@is_thunk_type[39m
[1;32m    540[0m [38;5;28;01mdef[39;00m [38;5;21mrval[39m(
[1;32m    541[0m     p[38;5;241m=[39mp, i[38;5;241m=[39mnode_input_storage, o[38;5;241m=[39mnode_output_storage, n[38;5;241m=[39mnode, params[38;5;241m=[39m[38;5;28;01mNone[39;00m
[1;32m    542[0m ):
[0;32m--> 543[0m     r [38;5;241m=[39m [43mp[49m[43m([49m[43mn[49m[43m,[49m[43m [49m[43m[[49m[43mx[49m[43m[[49m[38;5;241;43m0[39;49m[43m][49m[43m [49m[38;5;28;43;01mfor[39;49;00m[43m [49m[43mx[49m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[43mi[49m[43m][49m[43m,[49m[43m [49m[43mo[49m[43m)[49m
[1;32m    544[0m     [38;5;28;01mfor[39;00m o [38;5;129;01min[39;00m node[38;5;241m.[39moutputs:

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/ghgf/pymc.py:330[0m, in [0;36mHGFDistribution.perform[0;34m(self, node, inputs, outputs)[0m
[1;32m    329[0m [38;5;28;01mdef[39;00m [38;5;21mperform[39m([38;5;28mself[39m, node, inputs, outputs):
[0;32m--> 330[0m     result [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mhgf_logp[49m[43m([49m[38;5;241;43m*[39;49m[43minputs[49m[43m)[49m
[1;32m    331[0m     outputs[[38;5;241m0[39m][[38;5;241m0[39m] [38;5;241m=[39m np[38;5;241m.[39masarray(result, dtype[38;5;241m=[39mnode[38;5;241m.[39moutputs[[38;5;241m0[39m][38;5;241m.[39mdtype)

    [0;31m[... skipping hidden 14 frame][0m

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/ghgf/pymc.py:76[0m, in [0;36mhgf_logp[0;34m(omega_1, omega_2, omega_input, rho_1, rho_2, pi_1, pi_2, mu_1, mu_2, kappa_1, bias, data, response_function, model_type, n_levels, response_function_parameters)[0m
[1;32m     73[0m     kappas: Dict[[38;5;28mstr[39m, Optional[[38;5;28mfloat[39m]] [38;5;241m=[39m {[38;5;124m"[39m[38;5;124m1[39m[38;5;124m"[39m: kappa_1[i]}
[1;32m     75[0m     surprise [38;5;241m=[39m surprise [38;5;241m+[39m (
[0;32m---> 76[0m         [43mHGF[49m[43m([49m
[1;32m     77[0m [43m            [49m[43minitial_mu[49m[38;5;241;43m=[39;49m[43minitial_mu[49m[43m,[49m
[1;32m     78[0m [43m            [49m[43minitial_pi[49m[38;5;241;43m=[39;49m[43minitial_pi[49m[43m,[49m
[1;32m     79[0m [43m            [49m[43momega[49m[38;5;241;43m=[39;49m[43momega[49m[43m,[49m
[1;32m     80[0m [43m            [49m[43momega_input[49m[38;5;241;43m=[39;49m[43momega_input[49m[43m[[49m[43mi[49m[43m][49m[43m,[49m
[1;32m     81[0m [43m            [49m[43mrho[49m[38;5;241;43m=[39;49m[43mrho[49m[43m,[49m
[1;32m     82[0m [43m            [49m[43mkappas[49m[38;5;241;43m=[39;49m[43mkappas[49m[43m,[49m
[1;32m     83[0m [43m            [49m[43mbias[49m[38;5;241;43m=[39;49m[43mbias[49m[43m[[49m[43mi[49m[43m][49m[43m,[49m
[1;32m     84[0m [43m            [49m[43mmodel_type[49m[38;5;241;43m=[39;49m[43mmodel_type[49m[43m,[49m
[1;32m     85[0m [43m            [49m[43mn_levels[49m[38;5;241;43m=[39;49m[43mn_levels[49m[43m,[49m
[1;32m     86[0m [43m            [49m[43meta0[49m[38;5;241;43m=[39;49m[38;5;241;43m0.0[39;49m[43m,[49m
[1;32m     87[0m [43m            [49m[43meta1[49m[38;5;241;43m=[39;49m[38;5;241;43m1.0[39;49m[43m,[49m
[1;32m     88[0m [43m            [49m[43mpihat[49m[38;5;241;43m=[39;49m[43mjnp[49m[38;5;241;43m.[39;49m[43minf[49m[43m,[49m
[1;32m     89[0m [43m            [49m[43mverbose[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m     90[0m [43m        [49m[43m)[49m
[1;32m     91[0m [43m        [49m[38;5;241;43m.[39;49m[43minput_data[49m[43m([49m[43mdata[49m[43m[[49m[43mi[49m[43m][49m[43m)[49m
[1;32m     92[0m         [38;5;241m.[39msurprise(
[1;32m     93[0m             response_function[38;5;241m=[39mresponse_function,
[1;32m     94[0m             response_function_parameters[38;5;241m=[39mresponse_function_parameters,
[1;32m     95[0m         )
[1;32m     96[0m     )
[1;32m     98[0m [38;5;66;03m# Return the sum of the log probabilities (negative surprise)[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/ghgf/model.py:242[0m, in [0;36mHGF.input_data[0;34m(self, input_data)[0m
[1;32m    238[0m [38;5;66;03m# Initialise the first values[39;00m
[1;32m    239[0m res_init [38;5;241m=[39m (
[1;32m    240[0m     [38;5;28mself[39m[38;5;241m.[39minput_node,
[1;32m    241[0m     {
[0;32m--> 242[0m         [38;5;124m"[39m[38;5;124mtime[39m[38;5;124m"[39m: [43minput_data[49m[43m[[49m[38;5;241;43m0[39;49m[43m,[49m[43m [49m[38;5;241;43m1[39;49m[43m][49m,
[1;32m    243[0m         [38;5;124m"[39m[38;5;124mvalue[39m[38;5;124m"[39m: input_data[[38;5;241m0[39m, [38;5;241m0[39m] [38;5;241m+[39m [38;5;28mself[39m[38;5;241m.[39mbias,
[1;32m    244[0m         [38;5;124m"[39m[38;5;124msurprise[39m[38;5;124m"[39m: jnp[38;5;241m.[39marray([38;5;241m0.0[39m),
[1;32m    245[0m     },
[1;32m    246[0m )
[1;32m    248[0m [38;5;66;03m# This is where the HGF functions are used to scan the input time series[39;00m

[0;31mIndexError[0m: too many indices for array: array is 1-dimensional, but 2 were indexed

During handling of the above exception, another exception occurred:

[0;31mIndexError[0m                                Traceback (most recent call last)
Cell [0;32mIn [18], line 2[0m
[1;32m      1[0m [38;5;28;01mwith[39;00m two_level_hgf:
[0;32m----> 2[0m     two_level_hgf_idata [38;5;241m=[39m [43mpm[49m[38;5;241;43m.[39;49m[43msample[49m[43m([49m[43mchains[49m[38;5;241;43m=[39;49m[38;5;241;43m4[39;49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pymc/sampling.py:544[0m, in [0;36msample[0;34m(draws, step, init, n_init, initvals, trace, chains, cores, tune, progressbar, model, random_seed, discard_tuned_samples, compute_convergence_checks, callback, jitter_max_retries, return_inferencedata, keep_warning_stat, idata_kwargs, mp_ctx, **kwargs)[0m
[1;32m    542[0m         [kwargs[38;5;241m.[39msetdefault(k, v) [38;5;28;01mfor[39;00m k, v [38;5;129;01min[39;00m nuts_kwargs[38;5;241m.[39mitems()]
[1;32m    543[0m     _log[38;5;241m.[39minfo([38;5;124m"[39m[38;5;124mAuto-assigning NUTS sampler...[39m[38;5;124m"[39m)
[0;32m--> 544[0m     initial_points, step [38;5;241m=[39m [43minit_nuts[49m[43m([49m
[1;32m    545[0m [43m        [49m[43minit[49m[38;5;241;43m=[39;49m[43minit[49m[43m,[49m
[1;32m    546[0m [43m        [49m[43mchains[49m[38;5;241;43m=[39;49m[43mchains[49m[43m,[49m
[1;32m    547[0m [43m        [49m[43mn_init[49m[38;5;241;43m=[39;49m[43mn_init[49m[43m,[49m
[1;32m    548[0m [43m        [49m[43mmodel[49m[38;5;241;43m=[39;49m[43mmodel[49m[43m,[49m
[1;32m    549[0m [43m        [49m[43mrandom_seed[49m[38;5;241;43m=[39;49m[43mrandom_seed_list[49m[43m,[49m
[1;32m    550[0m [43m        [49m[43mprogressbar[49m[38;5;241;43m=[39;49m[43mprogressbar[49m[43m,[49m
[1;32m    551[0m [43m        [49m[43mjitter_max_retries[49m[38;5;241;43m=[39;49m[43mjitter_max_retries[49m[43m,[49m
[1;32m    552[0m [43m        [49m[43mtune[49m[38;5;241;43m=[39;49m[43mtune[49m[43m,[49m
[1;32m    553[0m [43m        [49m[43minitvals[49m[38;5;241;43m=[39;49m[43minitvals[49m[43m,[49m
[1;32m    554[0m [43m        [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m,[49m
[1;32m    555[0m [43m    [49m[43m)[49m
[1;32m    557[0m [38;5;28;01mif[39;00m initial_points [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m    558[0m     [38;5;66;03m# Time to draw/evaluate numeric start points for each chain.[39;00m
[1;32m    559[0m     ipfns [38;5;241m=[39m make_initial_point_fns_per_chain(
[1;32m    560[0m         model[38;5;241m=[39mmodel,
[1;32m    561[0m         overrides[38;5;241m=[39minitvals,
[1;32m    562[0m         jitter_rvs[38;5;241m=[39mfilter_rvs_to_jitter(step),
[1;32m    563[0m         chains[38;5;241m=[39mchains,
[1;32m    564[0m     )

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pymc/sampling.py:2405[0m, in [0;36minit_nuts[0;34m(init, chains, n_init, model, random_seed, progressbar, jitter_max_retries, tune, initvals, **kwargs)[0m
[1;32m   2398[0m _log[38;5;241m.[39minfo([38;5;124mf[39m[38;5;124m"[39m[38;5;124mInitializing NUTS using [39m[38;5;132;01m{[39;00minit[38;5;132;01m}[39;00m[38;5;124m...[39m[38;5;124m"[39m)
[1;32m   2400[0m cb [38;5;241m=[39m [
[1;32m   2401[0m     pm[38;5;241m.[39mcallbacks[38;5;241m.[39mCheckParametersConvergence(tolerance[38;5;241m=[39m[38;5;241m1e-2[39m, diff[38;5;241m=[39m[38;5;124m"[39m[38;5;124mabsolute[39m[38;5;124m"[39m),
[1;32m   2402[0m     pm[38;5;241m.[39mcallbacks[38;5;241m.[39mCheckParametersConvergence(tolerance[38;5;241m=[39m[38;5;241m1e-2[39m, diff[38;5;241m=[39m[38;5;124m"[39m[38;5;124mrelative[39m[38;5;124m"[39m),
[1;32m   2403[0m ]
[0;32m-> 2405[0m initial_points [38;5;241m=[39m [43m_init_jitter[49m[43m([49m
[1;32m   2406[0m [43m    [49m[43mmodel[49m[43m,[49m
[1;32m   2407[0m [43m    [49m[43minitvals[49m[43m,[49m
[1;32m   2408[0m [43m    [49m[43mseeds[49m[38;5;241;43m=[39;49m[43mrandom_seed_list[49m[43m,[49m
[1;32m   2409[0m [43m    [49m[43mjitter[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mjitter[39;49m[38;5;124;43m"[39;49m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[43minit[49m[43m,[49m
[1;32m   2410[0m [43m    [49m[43mjitter_max_retries[49m[38;5;241;43m=[39;49m[43mjitter_max_retries[49m[43m,[49m
[1;32m   2411[0m [43m[49m[43m)[49m
[1;32m   2413[0m apoints [38;5;241m=[39m [DictToArrayBijection[38;5;241m.[39mmap(point) [38;5;28;01mfor[39;00m point [38;5;129;01min[39;00m initial_points]
[1;32m   2414[0m apoints_data [38;5;241m=[39m [apoint[38;5;241m.[39mdata [38;5;28;01mfor[39;00m apoint [38;5;129;01min[39;00m apoints]

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pymc/sampling.py:2299[0m, in [0;36m_init_jitter[0;34m(model, initvals, seeds, jitter, jitter_max_retries)[0m
[1;32m   2297[0m [38;5;28;01mif[39;00m i [38;5;241m<[39m jitter_max_retries:
[1;32m   2298[0m     [38;5;28;01mtry[39;00m:
[0;32m-> 2299[0m         [43mmodel[49m[38;5;241;43m.[39;49m[43mcheck_start_vals[49m[43m([49m[43mpoint[49m[43m)[49m
[1;32m   2300[0m     [38;5;28;01mexcept[39;00m SamplingError:
[1;32m   2301[0m         [38;5;66;03m# Retry with a new seed[39;00m
[1;32m   2302[0m         seed [38;5;241m=[39m rng[38;5;241m.[39mrandint([38;5;241m2[39m[38;5;241m*[39m[38;5;241m*[39m[38;5;241m30[39m, dtype[38;5;241m=[39mnp[38;5;241m.[39mint64)

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pymc/model.py:1726[0m, in [0;36mModel.check_start_vals[0;34m(self, start)[0m
[1;32m   1720[0m     valid_keys [38;5;241m=[39m [38;5;124m"[39m[38;5;124m, [39m[38;5;124m"[39m[38;5;241m.[39mjoin([38;5;28mself[39m[38;5;241m.[39mnamed_vars[38;5;241m.[39mkeys())
[1;32m   1721[0m     [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m(
[1;32m   1722[0m         [38;5;124m"[39m[38;5;124mSome start parameters do not appear in the model![39m[38;5;130;01m\n[39;00m[38;5;124m"[39m
[1;32m   1723[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mValid keys are: [39m[38;5;132;01m{[39;00mvalid_keys[38;5;132;01m}[39;00m[38;5;124m, but [39m[38;5;132;01m{[39;00mextra_keys[38;5;132;01m}[39;00m[38;5;124m was supplied[39m[38;5;124m"[39m
[1;32m   1724[0m     )
[0;32m-> 1726[0m initial_eval [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mpoint_logps[49m[43m([49m[43mpoint[49m[38;5;241;43m=[39;49m[43melem[49m[43m)[49m
[1;32m   1728[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mall[39m(np[38;5;241m.[39misfinite(v) [38;5;28;01mfor[39;00m v [38;5;129;01min[39;00m initial_eval[38;5;241m.[39mvalues()):
[1;32m   1729[0m     [38;5;28;01mraise[39;00m SamplingError(
[1;32m   1730[0m         [38;5;124m"[39m[38;5;124mInitial evaluation of model at starting point failed![39m[38;5;130;01m\n[39;00m[38;5;124m"[39m
[1;32m   1731[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mStarting values:[39m[38;5;130;01m\n[39;00m[38;5;132;01m{[39;00melem[38;5;132;01m}[39;00m[38;5;130;01m\n[39;00m[38;5;130;01m\n[39;00m[38;5;124m"[39m
[1;32m   1732[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mInitial evaluation results:[39m[38;5;130;01m\n[39;00m[38;5;132;01m{[39;00minitial_eval[38;5;132;01m}[39;00m[38;5;124m"[39m
[1;32m   1733[0m     )

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pymc/model.py:1760[0m, in [0;36mModel.point_logps[0;34m(self, point, round_vals)[0m
[1;32m   1754[0m factors [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mbasic_RVs [38;5;241m+[39m [38;5;28mself[39m[38;5;241m.[39mpotentials
[1;32m   1755[0m factor_logps_fn [38;5;241m=[39m [at[38;5;241m.[39msum(factor) [38;5;28;01mfor[39;00m factor [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mlogp(factors, [38;5;28msum[39m[38;5;241m=[39m[38;5;28;01mFalse[39;00m)]
[1;32m   1756[0m [38;5;28;01mreturn[39;00m {
[1;32m   1757[0m     factor[38;5;241m.[39mname: np[38;5;241m.[39mround(np[38;5;241m.[39masarray(factor_logp), round_vals)
[1;32m   1758[0m     [38;5;28;01mfor[39;00m factor, factor_logp [38;5;129;01min[39;00m [38;5;28mzip[39m(
[1;32m   1759[0m         factors,
[0;32m-> 1760[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mcompile_fn[49m[43m([49m[43mfactor_logps_fn[49m[43m)[49m[43m([49m[43mpoint[49m[43m)[49m,
[1;32m   1761[0m     )
[1;32m   1762[0m }

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/pymc/aesaraf.py:596[0m, in [0;36mPointFunc.__call__[0;34m(self, state)[0m
[1;32m    595[0m [38;5;28;01mdef[39;00m [38;5;21m__call__[39m([38;5;28mself[39m, state):
[0;32m--> 596[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mf[49m[43m([49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mstate[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/aesara/compile/function/types.py:984[0m, in [0;36mFunction.__call__[0;34m(self, *args, **kwargs)[0m
[1;32m    982[0m     [38;5;28;01mif[39;00m [38;5;28mhasattr[39m([38;5;28mself[39m[38;5;241m.[39mvm, [38;5;124m"[39m[38;5;124mthunks[39m[38;5;124m"[39m):
[1;32m    983[0m         thunk [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mvm[38;5;241m.[39mthunks[[38;5;28mself[39m[38;5;241m.[39mvm[38;5;241m.[39mposition_of_error]
[0;32m--> 984[0m     [43mraise_with_op[49m[43m([49m
[1;32m    985[0m [43m        [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmaker[49m[38;5;241;43m.[39;49m[43mfgraph[49m[43m,[49m
[1;32m    986[0m [43m        [49m[43mnode[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mvm[49m[38;5;241;43m.[39;49m[43mnodes[49m[43m[[49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mvm[49m[38;5;241;43m.[39;49m[43mposition_of_error[49m[43m][49m[43m,[49m
[1;32m    987[0m [43m        [49m[43mthunk[49m[38;5;241;43m=[39;49m[43mthunk[49m[43m,[49m
[1;32m    988[0m [43m        [49m[43mstorage_map[49m[38;5;241;43m=[39;49m[38;5;28;43mgetattr[39;49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mvm[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mstorage_map[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m)[49m[43m,[49m
[1;32m    989[0m [43m    [49m[43m)[49m
[1;32m    990[0m [38;5;28;01melse[39;00m:
[1;32m    991[0m     [38;5;66;03m# old-style linkers raise their own exceptions[39;00m
[1;32m    992[0m     [38;5;28;01mraise[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/aesara/link/utils.py:534[0m, in [0;36mraise_with_op[0;34m(fgraph, node, thunk, exc_info, storage_map)[0m
[1;32m    529[0m     warnings[38;5;241m.[39mwarn(
[1;32m    530[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00mexc_type[38;5;132;01m}[39;00m[38;5;124m error does not allow us to add an extra error message[39m[38;5;124m"[39m
[1;32m    531[0m     )
[1;32m    532[0m     [38;5;66;03m# Some exception need extra parameter in inputs. So forget the[39;00m
[1;32m    533[0m     [38;5;66;03m# extra long error message in that case.[39;00m
[0;32m--> 534[0m [38;5;28;01mraise[39;00m exc_value[38;5;241m.[39mwith_traceback(exc_trace)

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/aesara/compile/function/types.py:971[0m, in [0;36mFunction.__call__[0;34m(self, *args, **kwargs)[0m
[1;32m    968[0m t0_fn [38;5;241m=[39m time[38;5;241m.[39mtime()
[1;32m    969[0m [38;5;28;01mtry[39;00m:
[1;32m    970[0m     outputs [38;5;241m=[39m (
[0;32m--> 971[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mvm[49m[43m([49m[43m)[49m
[1;32m    972[0m         [38;5;28;01mif[39;00m output_subset [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m
[1;32m    973[0m         [38;5;28;01melse[39;00m [38;5;28mself[39m[38;5;241m.[39mvm(output_subset[38;5;241m=[39moutput_subset)
[1;32m    974[0m     )
[1;32m    975[0m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m:
[1;32m    976[0m     restore_defaults()

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/aesara/graph/op.py:543[0m, in [0;36mOp.make_py_thunk.<locals>.rval[0;34m(p, i, o, n, params)[0m
[1;32m    539[0m [38;5;129m@is_thunk_type[39m
[1;32m    540[0m [38;5;28;01mdef[39;00m [38;5;21mrval[39m(
[1;32m    541[0m     p[38;5;241m=[39mp, i[38;5;241m=[39mnode_input_storage, o[38;5;241m=[39mnode_output_storage, n[38;5;241m=[39mnode, params[38;5;241m=[39m[38;5;28;01mNone[39;00m
[1;32m    542[0m ):
[0;32m--> 543[0m     r [38;5;241m=[39m [43mp[49m[43m([49m[43mn[49m[43m,[49m[43m [49m[43m[[49m[43mx[49m[43m[[49m[38;5;241;43m0[39;49m[43m][49m[43m [49m[38;5;28;43;01mfor[39;49;00m[43m [49m[43mx[49m[43m [49m[38;5;129;43;01min[39;49;00m[43m [49m[43mi[49m[43m][49m[43m,[49m[43m [49m[43mo[49m[43m)[49m
[1;32m    544[0m     [38;5;28;01mfor[39;00m o [38;5;129;01min[39;00m node[38;5;241m.[39moutputs:
[1;32m    545[0m         compute_map[o][[38;5;241m0[39m] [38;5;241m=[39m [38;5;28;01mTrue[39;00m

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/ghgf/pymc.py:330[0m, in [0;36mHGFDistribution.perform[0;34m(self, node, inputs, outputs)[0m
[1;32m    329[0m [38;5;28;01mdef[39;00m [38;5;21mperform[39m([38;5;28mself[39m, node, inputs, outputs):
[0;32m--> 330[0m     result [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mhgf_logp[49m[43m([49m[38;5;241;43m*[39;49m[43minputs[49m[43m)[49m
[1;32m    331[0m     outputs[[38;5;241m0[39m][[38;5;241m0[39m] [38;5;241m=[39m np[38;5;241m.[39masarray(result, dtype[38;5;241m=[39mnode[38;5;241m.[39moutputs[[38;5;241m0[39m][38;5;241m.[39mdtype)

    [0;31m[... skipping hidden 14 frame][0m

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/ghgf/pymc.py:76[0m, in [0;36mhgf_logp[0;34m(omega_1, omega_2, omega_input, rho_1, rho_2, pi_1, pi_2, mu_1, mu_2, kappa_1, bias, data, response_function, model_type, n_levels, response_function_parameters)[0m
[1;32m     72[0m     rho: Dict[[38;5;28mstr[39m, Optional[[38;5;28mfloat[39m]] [38;5;241m=[39m {[38;5;124m"[39m[38;5;124m1[39m[38;5;124m"[39m: rho_1[i], [38;5;124m"[39m[38;5;124m2[39m[38;5;124m"[39m: rho_2[i]}
[1;32m     73[0m     kappas: Dict[[38;5;28mstr[39m, Optional[[38;5;28mfloat[39m]] [38;5;241m=[39m {[38;5;124m"[39m[38;5;124m1[39m[38;5;124m"[39m: kappa_1[i]}
[1;32m     75[0m     surprise [38;5;241m=[39m surprise [38;5;241m+[39m (
[0;32m---> 76[0m         [43mHGF[49m[43m([49m
[1;32m     77[0m [43m            [49m[43minitial_mu[49m[38;5;241;43m=[39;49m[43minitial_mu[49m[43m,[49m
[1;32m     78[0m [43m            [49m[43minitial_pi[49m[38;5;241;43m=[39;49m[43minitial_pi[49m[43m,[49m
[1;32m     79[0m [43m            [49m[43momega[49m[38;5;241;43m=[39;49m[43momega[49m[43m,[49m
[1;32m     80[0m [43m            [49m[43momega_input[49m[38;5;241;43m=[39;49m[43momega_input[49m[43m[[49m[43mi[49m[43m][49m[43m,[49m
[1;32m     81[0m [43m            [49m[43mrho[49m[38;5;241;43m=[39;49m[43mrho[49m[43m,[49m
[1;32m     82[0m [43m            [49m[43mkappas[49m[38;5;241;43m=[39;49m[43mkappas[49m[43m,[49m
[1;32m     83[0m [43m            [49m[43mbias[49m[38;5;241;43m=[39;49m[43mbias[49m[43m[[49m[43mi[49m[43m][49m[43m,[49m
[1;32m     84[0m [43m            [49m[43mmodel_type[49m[38;5;241;43m=[39;49m[43mmodel_type[49m[43m,[49m
[1;32m     85[0m [43m            [49m[43mn_levels[49m[38;5;241;43m=[39;49m[43mn_levels[49m[43m,[49m
[1;32m     86[0m [43m            [49m[43meta0[49m[38;5;241;43m=[39;49m[38;5;241;43m0.0[39;49m[43m,[49m
[1;32m     87[0m [43m            [49m[43meta1[49m[38;5;241;43m=[39;49m[38;5;241;43m1.0[39;49m[43m,[49m
[1;32m     88[0m [43m            [49m[43mpihat[49m[38;5;241;43m=[39;49m[43mjnp[49m[38;5;241;43m.[39;49m[43minf[49m[43m,[49m
[1;32m     89[0m [43m            [49m[43mverbose[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m     90[0m [43m        [49m[43m)[49m
[1;32m     91[0m [43m        [49m[38;5;241;43m.[39;49m[43minput_data[49m[43m([49m[43mdata[49m[43m[[49m[43mi[49m[43m][49m[43m)[49m
[1;32m     92[0m         [38;5;241m.[39msurprise(
[1;32m     93[0m             response_function[38;5;241m=[39mresponse_function,
[1;32m     94[0m             response_function_parameters[38;5;241m=[39mresponse_function_parameters,
[1;32m     95[0m         )
[1;32m     96[0m     )
[1;32m     98[0m [38;5;66;03m# Return the sum of the log probabilities (negative surprise)[39;00m
[1;32m     99[0m [38;5;28;01mreturn[39;00m [38;5;241m-[39msurprise

File [0;32m/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/ghgf/model.py:242[0m, in [0;36mHGF.input_data[0;34m(self, input_data)[0m
[1;32m    236[0m     [38;5;28mprint[39m(([38;5;124mf[39m[38;5;124m"[39m[38;5;124mAdd [39m[38;5;132;01m{[39;00minput_data[38;5;241m.[39mshape[[38;5;241m0[39m][38;5;132;01m}[39;00m[38;5;124m new [39m[38;5;132;01m{[39;00m[38;5;28mself[39m[38;5;241m.[39mmodel_type[38;5;132;01m}[39;00m[38;5;124m observations.[39m[38;5;124m"[39m))
[1;32m    238[0m [38;5;66;03m# Initialise the first values[39;00m
[1;32m    239[0m res_init [38;5;241m=[39m (
[1;32m    240[0m     [38;5;28mself[39m[38;5;241m.[39minput_node,
[1;32m    241[0m     {
[0;32m--> 242[0m         [38;5;124m"[39m[38;5;124mtime[39m[38;5;124m"[39m: [43minput_data[49m[43m[[49m[38;5;241;43m0[39;49m[43m,[49m[43m [49m[38;5;241;43m1[39;49m[43m][49m,
[1;32m    243[0m         [38;5;124m"[39m[38;5;124mvalue[39m[38;5;124m"[39m: input_data[[38;5;241m0[39m, [38;5;241m0[39m] [38;5;241m+[39m [38;5;28mself[39m[38;5;241m.[39mbias,
[1;32m    244[0m         [38;5;124m"[39m[38;5;124msurprise[39m[38;5;124m"[39m: jnp[38;5;241m.[39marray([38;5;241m0.0[39m),
[1;32m    245[0m     },
[1;32m    246[0m )
[1;32m    248[0m [38;5;66;03m# This is where the HGF functions are used to scan the input time series[39;00m
[1;32m    249[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mmodel_type [38;5;241m==[39m [38;5;124m"[39m[38;5;124mcontinuous[39m[38;5;124m"[39m:

[0;31mIndexError[0m: too many indices for array: array is 1-dimensional, but 2 were indexed
Apply node that caused the error: HGFDistribution(omega_1, omega_2, TensorConstant{-9.210340371976184}, TensorConstant{0.0}, TensorConstant{0.0}, TensorConstant{10000.0}, TensorConstant{10.0}, TensorConstant{1.0357}, TensorConstant{0.0}, (d__logp/dhhgf_loglike){1.0}, TensorConstant{0.0})
Toposort index: 2
Inputs types: [TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ())]
Inputs shapes: [(), (), (), (), (), (), (), (), (), (), ()]
Inputs strides: [(), (), (), (), (), (), (), (), (), (), ()]
Inputs values: [array(-5.13205285), array(-6.97169659), array(-9.21034037), array(0.), array(0.), array(10000.), array(10.), array(1.0357), array(0.), array(1.), array(0.)]
Outputs clients: [['output']]

Backtrace when the node is created (use Aesara flag traceback__limit=N to make it longer):
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/IPython/core/interactiveshell.py", line 2995, in _run_cell
    return runner(coro)
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/IPython/core/async_helpers.py", line 129, in _pseudo_sync_runner
    coro.send(None)
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/IPython/core/interactiveshell.py", line 3194, in run_cell_async
    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/IPython/core/interactiveshell.py", line 3373, in run_ast_nodes
    if await self.run_code(code, result, async_=asy):
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/IPython/core/interactiveshell.py", line 3433, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "/tmp/ipykernel_2092/1428252488.py", line 8, in <module>
    hgf_logp_op(
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/aesara/graph/op.py", line 297, in __call__
    node = self.make_node(*inputs, **kwargs)
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/ghgf/pymc.py", line 326, in make_node
    outputs = [at.dscalar()]

HINT: Use the Aesara flag `exception_verbosity=high` for a debug print-out and storage map footprint of this Apply node.
IndexError: too many indices for array: array is 1-dimensional, but 2 were indexed
Apply node that caused the error: HGFDistribution(omega_1, omega_2, TensorConstant{-9.210340371976184}, TensorConstant{0.0}, TensorConstant{0.0}, TensorConstant{10000.0}, TensorConstant{10.0}, TensorConstant{1.0357}, TensorConstant{0.0}, (d__logp/dhhgf_loglike){1.0}, TensorConstant{0.0})
Toposort index: 2
Inputs types: [TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ()), TensorType(float64, ())]
Inputs shapes: [(), (), (), (), (), (), (), (), (), (), ()]
Inputs strides: [(), (), (), (), (), (), (), (), (), (), ()]
Inputs values: [array(-5.13205285), array(-6.97169659), array(-9.21034037), array(0.), array(0.), array(10000.), array(10.), array(1.0357), array(0.), array(1.), array(0.)]
Outputs clients: [['output']]

Backtrace when the node is created (use Aesara flag traceback__limit=N to make it longer):
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/IPython/core/interactiveshell.py", line 2995, in _run_cell
    return runner(coro)
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/IPython/core/async_helpers.py", line 129, in _pseudo_sync_runner
    coro.send(None)
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/IPython/core/interactiveshell.py", line 3194, in run_cell_async
    has_raised = await self.run_ast_nodes(code_ast.body, cell_name,
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/IPython/core/interactiveshell.py", line 3373, in run_ast_nodes
    if await self.run_code(code, result, async_=asy):
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/IPython/core/interactiveshell.py", line 3433, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "/tmp/ipykernel_2092/1428252488.py", line 8, in <module>
    hgf_logp_op(
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/aesara/graph/op.py", line 297, in __call__
    node = self.make_node(*inputs, **kwargs)
  File "/opt/hostedtoolcache/Python/3.9.15/x64/lib/python3.9/site-packages/ghgf/pymc.py", line 326, in make_node
    outputs = [at.dscalar()]

HINT: Use the Aesara flag `exception_verbosity=high` for a debug print-out and storage map footprint of this Apply node.

